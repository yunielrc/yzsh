#!/usr/bin/env zunit

# Tests for __yzsh_load_object

@test '__yzsh_load_object: with type jojo should return 1' {
  run __yzsh_load_object 'example0' 'jojo'

  assert "$output" same_as 'ERROR> object type must be: plugin or theme'
  assert $state equals 1
}

# Tests for  __yzsh_load_plugin

@test '__yzsh_load_plugin: with plugin empty should return 1' {
  run __yzsh_load_plugin ''

  assert "$output" same_as 'ERROR> plugin name empty'
  assert $state equals 1
}

@test '__yzsh_load_plugin: should load plugin 3rd/example0' {
  run __yzsh_load_plugin 'example0'

  assert "$output" matches "DEBUG> plugin example0 loaded from '.*/plugins/3rd/example0.plugin.zsh"
  assert $state equals 0
}

@test '__yzsh_load_plugin: should load plugin 3rd/example2/example2' {
  run __yzsh_load_plugin 'example2'

  assert "$output" matches "DEBUG> plugin example2 loaded from '.*plugins/3rd/example2/example2.plugin.zsh"
  assert $state equals 0
}

@test '__yzsh_load_plugin: should not load plugin 3rd/example100/example100' {
  run __yzsh_load_plugin 'example100'

  assert "$output" same_as "ERROR> plugin example100 can't be loaded"
  assert $state equals 1
}

@test '__yzsh_load_plugin: should load plugin local/example3/example3' {
  run __yzsh_load_plugin 'example3'

  assert "$output" matches "DEBUG> plugin example3 loaded from '.*/plugins/local/example3/example3.plugin.zsh"
  assert $state equals 0
}

@test '__yzsh_load_plugin: should load plugin local/example4/example4' {
  run __yzsh_load_plugin 'example4'

  assert "$output" matches "DEBUG> plugin example4 loaded from '.*/plugins/local/example4.plugin.zsh"
  assert $state equals 0
}

@test '__yzsh_load_plugin: should load plugin user/example5' {
  run __yzsh_load_plugin 'example5'

  assert "$output" matches "DEBUG> plugin example5 loaded from '.*/plugins/user/example5.plugin.zsh"
  assert $state equals 0
}

# Tests for __yzsh_load_theme

@test '__yzsh_load_theme: with theme empty should return 1' {
  run __yzsh_load_theme ''

  assert "$output" same_as 'ERROR> theme name empty'
  assert $state equals 1
}

@test '__yzsh_load_theme: should load theme 3rd/example0' {

  run __yzsh_load_theme 'example0'

  assert "$output" matches "DEBUG> theme example0 loaded from '.*/themes/3rd/example0.theme.zsh"
  assert $state equals 0
}

@test '__yzsh_load_theme: should load theme 3rd/example2/example2' {
  run __yzsh_load_theme 'example2'

  assert "$output" matches "DEBUG> theme example2 loaded from '.*themes/3rd/example2/example2.theme.zsh"
  assert $state equals 0
}

@test '__yzsh_load_theme: should not load theme 3rd/example100/example100' {
  run __yzsh_load_theme 'example100'

  assert "$output" same_as "ERROR> theme example100 can't be loaded"
  assert $state equals 1
}

@test '__yzsh_load_theme: should load theme local/example3/example3' {
  run __yzsh_load_theme 'example3'

  assert "$output" matches "DEBUG> theme example3 loaded from '.*/themes/local/example3/example3.theme.zsh"
  assert $state equals 0
}

@test '__yzsh_load_theme: should load theme local/example4/example4' {
  run __yzsh_load_theme 'example4'

  assert "$output" matches "DEBUG> theme example4 loaded from '.*/themes/local/example4.theme.zsh"
  assert $state equals 0
}

@test '__yzsh_load_theme: should load theme user/example5' {
  run __yzsh_load_theme 'example5'

  assert "$output" matches "DEBUG> theme example5 loaded from '.*/themes/user/example5.theme.zsh"
  assert $state equals 0
}
